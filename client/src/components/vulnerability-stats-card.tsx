import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { TrendingDown, TrendingUp, AlertTriangle, Shield, Bug, Activity } from "lucide-react"

interface VulnerabilityStatsCardProps {
  title: string
  value: number | string
  change?: number
  severity?: "critical" | "high" | "medium" | "low" | "info"
  icon?: "shield" | "bug" | "alert" | "activity"
  description?: string
}

const severityConfig = {
  critical: { color: "destructive", bgColor: "bg-red-50 dark:bg-red-950/20" },
  high: { color: "secondary", bgColor: "bg-orange-50 dark:bg-orange-950/20" },
  medium: { color: "secondary", bgColor: "bg-yellow-50 dark:bg-yellow-950/20" },
  low: { color: "secondary", bgColor: "bg-green-50 dark:bg-green-950/20" },
  info: { color: "secondary", bgColor: "bg-blue-50 dark:bg-blue-950/20" }
}

const iconMap = {
  shield: Shield,
  bug: Bug,
  alert: AlertTriangle,
  activity: Activity
}

export function VulnerabilityStatsCard({ 
  title, 
  value, 
  change, 
  severity = "info", 
  icon = "activity",
  description 
}: VulnerabilityStatsCardProps) {
  const IconComponent = iconMap[icon]
  const config = severityConfig[severity]
  
  return (
    <Card className="hover-elevate cyber-border" data-testid={`card-stats-${title.toLowerCase().replace(/\s+/g, '-')}`}>
      <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
        <CardTitle className="text-sm font-medium text-muted-foreground">
          {title}
        </CardTitle>
        <div className={`p-2 rounded-md ${config.bgColor} cyber-glow`}>
          <IconComponent className="h-4 w-4" />
        </div>
      </CardHeader>
      <CardContent>
        <div className="text-2xl font-bold">{value}</div>
        {change !== undefined && (
          <div className="flex items-center gap-2 text-xs text-muted-foreground">
            {change > 0 ? (
              <>
                <TrendingUp className="h-3 w-3 text-red-500" />
                <span className="text-red-500">+{change}%</span>
              </>
            ) : (
              <>
                <TrendingDown className="h-3 w-3 text-green-500" />
                <span className="text-green-500">{change}%</span>
              </>
            )}
            <span>from last period</span>
          </div>
        )}
        {description && (
          <p className="text-xs text-muted-foreground mt-1">{description}</p>
        )}
      </CardContent>
    </Card>
  )
}